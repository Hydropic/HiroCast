function [x, optiResuls] = splineOptimization(optimalSplineDiscretization, maxIterationsSplineTCP, splineDiscretization, axesPointConfigs, min_values, max_values, jerkBoundaries, init_ax_values_XY)
        
   
    % Defineig options f√ºr das Optimalsteuerungsprob.
    opts = optimoptions(@fmincon, ...
        'Algorithm','interior-point', ...
        "MaxFunctionEvaluations",50000,...
        "MaxIterations",maxIterationsSplineTCP, ...
        "StepTolerance",1e-17, ...
        "OptimalityTolerance",1e-17, ...
        "EnableFeasibilityMode",true, ...
        "DiffMinChange", 0.02, ... 
        "DiffMaxChange", 2, ...
        "SubproblemAlgorithm",'factorization', ...
        "PlotFcn",["optimplotfunccount","optimplotfvalconstr","optimplotconstrviolation","optimplotstepsize","optimplotfirstorderopt"], ...
        "Display",'iter','ConstraintTolerance',0.00018);
    
    optimization_values = init_ax_values_XY;

    problem = createOptimProblem('fmincon',...
        'x0',init_ax_values_XY, ...
        'objective',@optimization_task,...
        'nonlcon', @(optimization_values_XY)constraintFcnValidation_spline(optimalSplineDiscretization, optimization_values_XY, splineDiscretization, axesPointConfigs, max_values, min_values, jerkBoundaries), ...
        'lb',min_values,...
        'ub',max_values, ...
        'options',opts);
        
    [x,fval,eflag,output] = fmincon(problem);
    
    optiResuls = [fval, output.constrviolation]

    end


    function objective = optimization_task(optimization_values)
    timeSum = sum(optimization_values(1, :))
        objective = timeSum
    end